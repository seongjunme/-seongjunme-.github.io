{"version":3,"file":"component---src-pages-index-tsx-a345aada095f55e203f9.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/home/About/style.ts","webpack://gatsby-starter-default/./src/components/home/About/index.tsx","webpack://gatsby-starter-default/./src/components/home/NavBar/style.ts","webpack://gatsby-starter-default/./src/components/home/NavBar/index.tsx","webpack://gatsby-starter-default/./src/components/home/Contact/style.ts","webpack://gatsby-starter-default/./src/components/home/Contact/index.tsx","webpack://gatsby-starter-default/./src/components/home/PostList/style.ts","webpack://gatsby-starter-default/./src/components/home/PostList/index.tsx","webpack://gatsby-starter-default/./src/utils/debounce.ts","webpack://gatsby-starter-default/./src/hooks/useFullPage.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nexport const ProfileImage = styled(GatsbyImage)`\n  width: 200px;\n  height: 200px;\n  margin-bottom: 30px;\n  border-radius: 50%;\n\n  @media (max-width: 767px) {\n    width: 100px;\n    height: 100px;\n  }\n`;\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 67.5rem;\n  margin: 0 auto;\n  padding: 0rem 6.25rem;\n\n  @media (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nexport const SubTitle = styled.div`\n  font-size: 1.5rem;\n  font-weight: 400;\n\n  @media (max-width: 479px) {\n    font-size: 0.875rem;\n  }\n\n  @media (min-width: 480px) and (max-width: 767px) {\n    font-size: 1rem;\n  }\n`;\n\nexport const Title = styled.div`\n  margin-top: 0.3125rem;\n  font-size: 2.1875rem;\n  font-weight: 700;\n\n  @media (max-width: 479px) {\n    font-size: 0.75rem;\n  }\n\n  @media (min-width: 480px) and (max-width: 767px) {\n    font-size: 1.25rem;\n  }\n`;\n","import { IGatsbyImageData } from 'gatsby-plugin-image';\nimport React from 'react';\nimport { SubTitle, Title } from './style';\nimport { Container, ProfileImage } from './style';\n\ninterface Props {\n  image: IGatsbyImageData;\n}\n\nconst Intro: React.FC<Props> = ({ image }) => {\n  return (\n    <Container>\n      <ProfileImage image={image} alt=\"Profile Image\" />\n      <SubTitle>\"안녕하세요.\"</SubTitle>\n      <Title>\"프론트엔드를 사랑하는\"</Title>\n      <Title>\"웹 성능 개선을 좋아하는\"</Title>\n      <Title>\"협업에 진심인 주니어 개발자입니다.\"</Title>\n    </Container>\n  );\n};\n\nexport default Intro;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.ul`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  position: fixed;\n  right: 6.25rem;\n  width: 18.75rem;\n  height: 6.25rem;\n  align-items: center;\n  z-index: 100;\n\n  @media (max-width: 767px) {\n    position: fixed;\n    right: 0rem;\n    justify-content: space-evenly;\n  }\n`;\n\nexport const List = styled.li<{ isSelected: boolean }>`\n  list-style: none;\n  cursor: pointer;\n  font-size: 1.125rem;\n  font-weight: ${({ isSelected }) => (isSelected ? 'bold' : 400)};\n  border-bottom: ${({ isSelected }) => (isSelected ? '1px solid #ffffff' : 'none')};\n\n  &:hover {\n    border-bottom: 0.0625rem solid #ffffff;\n  }\n\n  @media (max-width: 767px) {\n    font-size: 0.875rem;\n  }\n`;\n","import React from 'react';\nimport { Container, List } from './style';\n\ninterface Props {\n  currentPageName: string;\n  onClickNavBar: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nconst NavBar: React.FC<Props> = ({ currentPageName, onClickNavBar }) => {\n  return (\n    <Container>\n      <List isSelected={currentPageName === 'About'} onClick={onClickNavBar}>\n        About\n      </List>\n      <List isSelected={currentPageName === 'Project'} onClick={onClickNavBar}>\n        Project\n      </List>\n      <List isSelected={currentPageName === 'Blog'} onClick={onClickNavBar}>\n        Blog\n      </List>\n      <List isSelected={currentPageName === 'Contact'} onClick={onClickNavBar}>\n        Contact\n      </List>\n    </Container>\n  );\n};\n\nexport default NavBar;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  height: 100vh;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Content = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  line-height: 24px;\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { Container, Content } from './style';\nimport Footer from 'components/common/Footer';\n\nconst Contact = () => {\n  return (\n    <Container>\n      <Content>\n        <div>Phone: 010-3292-7923</div>\n        <div>Mail: sjman223@naver.com</div>\n        <div>\n          Github:\n          <a href=\"https://github.com/seongjunme\">https://github.com/seongjunme</a>\n        </div>\n      </Content>\n      <Footer />\n    </Container>\n  );\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\nexport const Container = styled.div`\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 30px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Wrapper = styled.div`\n  height: 100vh;\n  position: relative;\n  margin: 0 auto;\n`;\n\nexport const More = styled(Link)`\n  position: absolute;\n  top: -12%;\n  right: 1%;\n  font-size: 16px;\n`;\n","import React from 'react';\nimport PostItem from 'components/common/PostItem';\nimport { PostListType } from 'types/post.types';\nimport { Container, Wrapper, More } from './style';\n\ninterface Props {\n  posts: PostListType[];\n  moreURL?: string;\n}\n\nconst PostList: React.FC<Props> = ({ posts, moreURL }) => {\n  return (\n    <Wrapper>\n      <Container>\n        {posts.slice(0, 3).map(\n          ({\n            node: {\n              id,\n              fields: { slug },\n              frontmatter,\n            },\n          }) => (\n            <PostItem key={id} link={slug} {...frontmatter} />\n          ),\n        )}\n        {moreURL && <More to={moreURL}>more {'>'}</More>}\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default PostList;\n","const debounce = (callback: (...arg: any) => void, delay: number) => {\n  let timer: NodeJS.Timeout;\n\n  return (...arg: any) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...arg), delay);\n  };\n};\n\nexport default debounce;\n","import { MutableRefObject, useState, useRef, useEffect, useCallback } from 'react';\nimport debounce from 'utils/debounce';\n\nconst PAGE_NAMES = ['About', 'Project', 'Blog', 'Contact'];\n\nconst useFullPage = ({ maxPageCount }: { maxPageCount: number }) => {\n  const outerRef: MutableRefObject<HTMLDivElement | null> = useRef<HTMLDivElement>(null);\n  const currentPage = useRef(0);\n  const [currentPageName, setCurrentPageName] = useState<string>(PAGE_NAMES[currentPage.current]);\n\n  const scrollToCurrentPage = useCallback(() => {\n    outerRef.current?.scrollTo({\n      top: window.innerHeight * currentPage.current,\n      left: 0,\n      behavior: 'smooth',\n    });\n  }, []);\n\n  const scrollDown = useCallback(() => {\n    currentPage.current += 1;\n    scrollToCurrentPage();\n    setCurrentPageName(PAGE_NAMES[currentPage.current]);\n  }, []);\n\n  const scrollUp = useCallback(() => {\n    currentPage.current -= 1;\n    scrollToCurrentPage();\n    setCurrentPageName(PAGE_NAMES[currentPage.current]);\n  }, []);\n\n  useEffect(() => {\n    const wheelHandler = debounce((e: WheelEvent) => {\n      e.preventDefault();\n      const { deltaY } = e;\n\n      if (deltaY > 0 && currentPage.current < maxPageCount) {\n        scrollDown();\n      } else if (deltaY < 0 && currentPage.current > 0) {\n        scrollUp();\n      }\n    }, 50);\n\n    outerRef.current?.addEventListener('wheel', wheelHandler);\n\n    return () => {\n      outerRef.current?.removeEventListener('wheel', wheelHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', scrollToCurrentPage);\n\n    return () => {\n      window.removeEventListener('resize', scrollToCurrentPage);\n    };\n  });\n\n  const onClickNavBar = useCallback((e: React.MouseEvent<HTMLElement>) => {\n    const {\n      currentTarget: { innerText },\n    } = e;\n    currentPage.current = PAGE_NAMES.indexOf(innerText);\n    scrollToCurrentPage();\n    setCurrentPageName(innerText);\n  }, []);\n\n  return { outerRef, currentPageName, onClickNavBar };\n};\n\nexport default useFullPage;\n","import React, { useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport GlobalStyle from 'components/common/GlobalStyle';\nimport About from 'components/home/About';\nimport { graphql } from 'gatsby';\nimport { PostListType } from 'types/post.types';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport NavBar from 'components/home/NavBar';\nimport Contact from 'components/home/Contact';\nimport PostList from 'components/home/PostList';\nimport useFullPage from 'hooks/useFullPage';\n\ninterface Props {\n  data: {\n    allMarkdownRemark: {\n      edges: PostListType[];\n    };\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n    };\n  };\n}\n\nconst Index: React.FC<Props> = ({\n  data: {\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n    },\n  },\n}) => {\n  const { outerRef, currentPageName, onClickNavBar } = useFullPage({ maxPageCount: 3 });\n\n  const projects = useMemo(\n    () =>\n      edges.filter(\n        ({\n          node: {\n            frontmatter: { type },\n          },\n        }) => type === 'Project',\n      ),\n    [],\n  );\n\n  const blogs = useMemo(\n    () =>\n      edges.filter(\n        ({\n          node: {\n            frontmatter: { type },\n          },\n        }) => type === 'Blog',\n      ),\n    [],\n  );\n  return (\n    <Background ref={outerRef}>\n      <NavBar currentPageName={currentPageName} onClickNavBar={onClickNavBar} />\n      <About image={gatsbyImageData} />\n      <PostList posts={projects} />\n      <PostList posts={blogs} moreURL=\"/blog\" />\n      <Contact />\n      <GlobalStyle />\n    </Background>\n  );\n};\n\nexport default Index;\n\nconst Background = styled.div`\n  height: 100vh;\n  overflow-y: hidden;\n  overflow-x: hidden;\n\n  &::--webkit-scrollbar {\n    display: none;\n  }\n\n  width: 100%;\n  background-color: #121212;\n  color: #ffffff;\n`;\n\nexport const getData = graphql`\n  query getData {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n            type\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n    }\n  }\n`;\n"],"names":["ProfileImage","GatsbyImage","Container","SubTitle","Title","image","alt","List","isSelected","currentPageName","onClickNavBar","onClick","Content","href","Footer","Wrapper","More","Link","posts","moreURL","slice","map","node","id","slug","fields","frontmatter","PostItem","key","link","to","callback","delay","timer","arg","clearTimeout","setTimeout","PAGE_NAMES","maxPageCount","outerRef","useRef","currentPage","useState","current","setCurrentPageName","scrollToCurrentPage","useCallback","scrollTo","top","window","innerHeight","left","behavior","scrollDown","scrollUp","useEffect","wheelHandler","debounce","e","preventDefault","deltaY","addEventListener","removeEventListener","innerText","currentTarget","indexOf","data","edges","allMarkdownRemark","gatsbyImageData","file","childImageSharp","useFullPage","projects","useMemo","filter","type","blogs","Background","ref","About","GlobalStyle"],"sourceRoot":""}